<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>R Language Notes</title>
    <url>/posts/72aeab1e/</url>
    <content><![CDATA[<p><strong>Abstract:</strong> R is a common-used language especially for statistical analysis. I am a skilled user of python, NCL(Ncar Command Language), C Shell, and Fortran, but rarely use R. It is necessary to maintain such a post to note basic knowledge and tips for R.</p>
<a id="more"></a>
<h1 id="basics-of-r">1. Basics of R</h1>
<h2 id="packages-management">1.1. Packages Management</h2>
<p>There are two main mathods to install packages for R that using R function <code>install.packages('packages')</code> or using <code>conda install r-packages</code>.</p>
<p>When loading packages, both <code>require('package')</code> and <code>library('package')</code> are available. However, there is a essential difference between the two commands that <code>library()</code> will raise an error when the package is not available while <code>require()</code> merely returns <code>FALSE</code>. In other words, <code>library()</code> loads a package, and <code>require()</code> <strong>tries</strong> to load a package. Detailed discussion could be found in <a href="https://stackoverflow.com/questions/5595512/what-is-the-difference-between-require-and-library">What is the difference between require() and library()?</a> and <a href="https://yihui.org/en/2014/07/library-vs-require/">library() vs require() in R</a>.</p>
<p>Some R packages are hard to install, I tried many times and finally succeeded. Here are instuctions:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># rgdal</span></span><br><span class="line">$ conda install -c conda-forge r-rgdal </span><br></pre></td></tr></table></figure>
<h2 id="run-r-scripts-in-command-line">1.2. Run R Scripts in Command Line</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ Rscript your_r_script.R</span><br></pre></td></tr></table></figure>
<h2 id="arrays-and-matrices">1.3. Arrays and Matrices</h2>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Get dims of matrix</span></span><br><span class="line">Dims &lt;- <span class="built_in">dim</span>(your_matrix)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Get length of Array</span></span><br><span class="line">Len &lt;- <span class="built_in">length</span>(your_array)</span><br></pre></td></tr></table></figure>
<h2 id="loops">1.4. Loops</h2>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> ()</span><br></pre></td></tr></table></figure>
<h2 id="string">1.5. String</h2>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># combine strings</span></span><br><span class="line">paste()</span><br></pre></td></tr></table></figure>
<p><strong>References:</strong><br>
1. <a href="https://blog.csdn.net/waple_0820/article/details/53171784">R语言中字符串的拼接操作</a></p>
<h1 id="some-tips-for-r">2. Some Tips for R</h1>
<h2 id="data-io">2.1. Data IO</h2>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Read *.dbf data</span></span><br><span class="line">library(foreign)</span><br><span class="line"></span><br><span class="line">data &lt;- read.dbf(<span class="string">&#x27;your_dbf_data.dbf&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Read *.nc data</span></span><br><span class="line">data &lt;- nc_open(<span class="string">&#x27;your_nc_data.nc)</span></span><br><span class="line"><span class="string">names(data$var)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">PM25 &lt;- ncvar_get( nc = data, varid = &#x27;</span>PM25<span class="string">&#x27;)</span></span><br><span class="line"><span class="string">PM10 &lt;- ncvar_get( nc = data, varid = &#x27;</span>PM10<span class="string">&#x27;)</span></span><br></pre></td></tr></table></figure>
<p><strong>References:</strong><br>
1. <a href="https://www.jianshu.com/p/690f3e1f3ee0">【R】R语言NC文件读写</a></p>
<h2 id="date-and-time">2.2. Date and Time</h2>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Create date seq</span></span><br><span class="line">start_date = <span class="string">&#x27;2017-01-01&#x27;</span></span><br><span class="line">ndays = <span class="number">31</span></span><br><span class="line">calendar = seq.Date(from=as.Date(start_date, format=<span class="string">&#x27;%Y-%m-%d&#x27;</span>), by=<span class="string">&#x27;day&#x27;</span>, length.out=ndays)</span><br><span class="line">calendar &lt;- format(calendar, format=<span class="string">&quot;%Y%m%d&quot;</span>)</span><br></pre></td></tr></table></figure>
<p><strong>References:</strong><br>
1. <a href="http://blog.sciencenet.cn/blog-247792-837263.html">R语言中生成日期序列</a></p>
]]></content>
      <tags>
        <tag>R</tag>
        <tag>Statistics</tag>
      </tags>
  </entry>
  <entry>
    <title>Classic Literature</title>
    <url>/posts/beb4e2e0/</url>
    <content><![CDATA[<p><strong>Abstract:</strong></p>
<a id="more"></a>
]]></content>
      <tags>
        <tag>Literature</tag>
      </tags>
  </entry>
  <entry>
    <title>Deep Brief Network</title>
    <url>/posts/34f88668/</url>
    <content><![CDATA[<p><strong>Abstract:</strong></p>
<a id="more"></a>
]]></content>
      <tags>
        <tag>Python</tag>
        <tag>PyTorch</tag>
        <tag>Deep Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>PyTorch Notes</title>
    <url>/posts/6eaa0ee7/</url>
    <content><![CDATA[<p><strong>Abstract:</strong> <a href="https://pytorch.org/">PyTorch</a> is a powerful and easy-to-use framework for deep learning, which is a indispensable tool for my research. It is of necessities to take notes when learning PyTorch for future to consult to. I will continuely update this post.</p>
<a id="more"></a>
]]></content>
      <tags>
        <tag>Python</tag>
        <tag>PyTorch</tag>
        <tag>Deep Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>Python Tips</title>
    <url>/posts/dcbfa745/</url>
    <content><![CDATA[<p><strong>Abstract:</strong> Scientific computing, plotting, and data IO highly rely on packages in python. However, there are much many specific and trivial methods and functions and they sometimes designed in quite different form in different packages, which are hard to memory. Therefore, I wrote this post to aid the usage of some important packages. It is assumed that readers have basic knowledge of python and those packages.</p>
<a id="more"></a>
<h2 id="introduction">1. Introduction</h2>
<h2 id="tips-for-pandas">2. Tips for Pandas</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"><span class="comment"># On DataFrame</span></span><br><span class="line"><span class="comment">## Create DF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Date series</span></span><br><span class="line">dates = pd.date_range(start=<span class="string">&#x27;2020-01-01&#x27;</span>, end=<span class="string">&#x27;2020-01-10&#x27;</span>, freq=<span class="string">&#x27;5D&#x27;</span>)</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">DatetimeIndex([&#x27;2020-01-01&#x27;, &#x27;2020-01-06&#x27;], dtype=&#x27;datetime64[ns]&#x27;, freq=&#x27;5D&#x27;)</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">dates = pd.date_range(start=<span class="string">&#x27;2020-01-01&#x27;</span>, periods=<span class="number">10</span>, freq=<span class="string">&#x27;D&#x27;</span>)</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">DatetimeIndex([&#x27;2020-01-01&#x27;, &#x27;2020-01-02&#x27;, &#x27;2020-01-03&#x27;, &#x27;2020-01-04&#x27;,</span></span><br><span class="line"><span class="string">               &#x27;2020-01-05&#x27;, &#x27;2020-01-06&#x27;, &#x27;2020-01-07&#x27;, &#x27;2020-01-08&#x27;,</span></span><br><span class="line"><span class="string">               &#x27;2020-01-09&#x27;, &#x27;2020-01-10&#x27;],</span></span><br><span class="line"><span class="string">              dtype=&#x27;datetime64[ns]&#x27;, freq=&#x27;D&#x27;)</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>
<p><strong>References:</strong></p>
<h2 id="tips-for-xarray">3. Tips for Xarray</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Xarray <span class="keyword">as</span> xr</span><br></pre></td></tr></table></figure>
<p><strong>References:</strong></p>
<h2 id="tips-for-cartopy">4. Tips for Cartopy</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cartopy.crs <span class="keyword">as</span> ccrs</span><br></pre></td></tr></table></figure>
<p><strong>References:</strong><br>
1. <a href="https://blog.csdn.net/weixin_42355670/article/details/106007204">cartopy 绘制中国地图，南海诸岛和十段线</a><br>
2. <a href="https://www.kesci.com/mw/project/5f3c95a3af3980002cbf560b">Cartopy绘图 | 中国地图最正确的使用方式</a><br>
3. <a href="https://blog.csdn.net/weixin_42372313/article/details/113572786">小白学习cartopy画地图的第一天</a><br>
4. <a href="https://my.oschina.net/u/4579695/blog/4879010">Python兰伯特投影中国区域等值线图</a><br>
5. <a href="https://github.com/SciTools/cartopy/issues/1530">How to remove latitude labels in x axis in cartopy 0.18</a></p>
<h2 id="tips-for-basemap">5. Tips for Basemap</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> mpl_toolkits.base <span class="keyword">import</span> Basemap</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br></pre></td></tr></table></figure>
<p><strong>References:</strong></p>
<h2 id="tips-for-numpy">6. Tips for Numpy</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></table></figure>
<p><strong>References:</strong></p>
<h2 id="tips-for-scipy">7. Tips for SciPy</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> scipy</span><br><span class="line"></span><br><span class="line"><span class="comment"># Regression</span></span><br></pre></td></tr></table></figure>
<p><strong>References:</strong></p>
<h2 id="tips-for-pytorch">8. Tips for PyTorch</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br></pre></td></tr></table></figure>
<p><strong>References:</strong></p>
<h2 id="tips-for-calendar-datetime-and-time">9. Tips for Calendar, Datetime, and Time</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> calendar</span><br><span class="line"><span class="keyword">import</span> datetime <span class="keyword">as</span> dt</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="comment"># Datetime &lt;=&gt; String</span></span><br></pre></td></tr></table></figure>
<p><strong>References:</strong></p>
<h2 id="tips-for-matplotlib-and-seaborn">10. Tips for MatPlotLib and Seaborn</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sbn</span><br><span class="line"></span><br><span class="line"><span class="comment"># Bar Chart</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Pie Chart</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Line Plot</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Scatter Plot</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Color Bar Settings</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Legend Settings</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Design Axes</span></span><br></pre></td></tr></table></figure>
<p><strong>References:</strong></p>
]]></content>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
</search>
